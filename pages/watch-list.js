import React from "react";
import Navbar from "@/components/Navbar/Navbar";
import Footer from "@/components/Footer/Footer";
import Tabs from "@/components/Tabs/Tabs";
import Head from "next/head";
import style from "@/styles/MyProfile.module.scss";
import ShowCollection from "@/components/ShowCollection/ShowCollection";
import { useState, useEffect } from "react";
import axios from "axios";

import { GlobalVariables } from "./_app";
import { useContext } from "react";

const removeValue = (arr, value) => {
  const filteredArray = arr.filter((item) => {
    return item !== value;
  });
  return filteredArray;
};

const removeNullValFromArr = (arr) => {
  let result = [];
  for (let index = 0; index < arr.length; index++) {
    const element = arr[index];
    if (element !== null || element === undefined) {
      result.push(element);
    }
  }
  return result;
};

const WatchList = () => {
  const { ClientData, setClientData, AvatarCollection } =
    useContext(GlobalVariables);
  const [SuggestionsCollection, setSuggestionsCollection] = useState([]);

  useEffect(() => {
    // Getting Updated user data
    axios
      .post("/api/get-user", {
        username: ClientData.username,
        password: ClientData.password,
      })
      .then(function (response) {
        setClientData(response.data[0]);
        console.log(ClientData);
        axios
          .post("/api/get-specific-shows", ClientData.WatchList)
          .then(function (response) {
            setSuggestionsCollection(removeNullValFromArr(response.data));
            console.log({ SuggestionsCollection });
          })
          .catch(function (error) {
            console.log(error);
          })
          .finally(function () {});
      })
      .catch(function (error) {
        setClientData({});
        console.log(error);
        alert("Error Authentication, Please Login Again");
      })
      .finally(function () {});
  }, []);

  const RemoveFromList = (showId) => {
    // Getting Updated user data
    axios
      .post("/api/get-user", {
        username: ClientData.username,
        password: ClientData.password,
      })
      .then(function (response) {
        setClientData(response.data[0]);
        console.log(ClientData);

        // Getting Updated user data
        axios
          .post("/api/update-user", {
            username: ClientData.username,
            password: ClientData.password,
            update: {
              WatchList: removeValue(ClientData.WatchList, showId),
            },
          })
          .then(function (response) {
            setClientData(response.data.New[0]);
            console.clear();
            console.log({ ClientData, New: response.data.New[0].WatchList });
            axios
              .post("/api/get-specific-shows", response.data.New[0].WatchList)
              .then(function (response) {
                setSuggestionsCollection(removeNullValFromArr(response.data));
                console.log({ seg: SuggestionsCollection });
              })
              .catch(function (error) {
                console.log(error);
              })
              .finally(function () {});
          })
          .catch(function (error) {
            setClientData({});
            console.log({ error });
            alert("Error Authentication, Please Login Again");
          })
          .finally(function () {});
      })
      .catch(function (error) {
        setClientData({});
        console.log(error);
        alert("Error Authentication, Please Login Again");
      })
      .finally(function () {});
  };

  return (
    <>
      <Head>
        <title>AnimixPlay</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar
        style={{
          position: "static",
          backgroundColor: "#2a2c31",
          background: "url(/FooterBg.jpg)",
        }}
      />
      <main className={style.main}>
        <Tabs Name={`${ClientData.first_name} ${ClientData.last_name}`} />

        <h1
          style={{
            width: "100vw",
            maxWidth: "1200px",
            padding: "0rem 15px",
            marginLeft: "auto",
            marginRight: "auto",
          }}
        >
          Watch List
        </h1>
        <br />
        <ShowCollection
          ShowList={SuggestionsCollection}
          CrossButtonStatus={true}
          CrossButtonFunction={RemoveFromList}
        />
      </main>
      <Footer />
    </>
  );
};

export default WatchList;
