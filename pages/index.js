import Head from "next/head";
import styles from "@/styles/Home.module.scss";
import Navbar from "@/components/Navbar/Navbar";
import Footer from "@/components/Footer/Footer";
import ShowCollection from "@/components/ShowCollection/ShowCollection";
import Link from "next/link";
import axios from "axios";
import { useEffect, useState } from "react";
import { GlobalVariables } from "./_app";
import { useContext } from "react";

const removeNullValFromArr = (arr) => {
  let result = [];
  for (let index = 0; index < arr.length; index++) {
    const element = arr[index];
    if (element !== null || element === undefined) {
      result.push(element);
    }
  }
  return result;
};

export default function Home() {
  const { ClientData, setClientData, AvatarCollection } =
    useContext(GlobalVariables);
  const [SuggestionsCollection, setSuggestionsCollection] = useState([]);
  const [RecentlyVisited, setRecentlyVisited] = useState([]);
  const [WatchList, setWatchList] = useState([]);

  useEffect(() => {
    axios
      .get("/api/get-shows")
      .then(function (response) {
        setSuggestionsCollection(response.data.show);
      })
      .catch(function (error) {
        console.log(error);
      })
      .finally(function () {});

    // Getting User Data
    axios
      .post("/api/get-user", {
        username: ClientData.username,
        password: ClientData.password,
      })
      .then(function (response) {
        setClientData(response.data[0]);
        console.log({ ClientData });

        // Getting Recently Visited
        axios
          .post("/api/get-specific-shows", ClientData.RecentlyVisited)
          .then(function (response) {
            setRecentlyVisited(removeNullValFromArr(response.data));
            console.log({ RecetlyVisited: response.data });
          })
          .catch(function (error) {
            console.log(error);
          })
          .finally(function () {});

        // Getting Recently Visited
        axios
          .post("/api/get-specific-shows", ClientData.WatchList)
          .then(function (response) {
            setWatchList(removeNullValFromArr(response.data));
            console.log({ WatchList: response.data });
          })
          .catch(function (error) {
            console.log(error);
          })
          .finally(function () {});
      })
      .catch(function (error) {
        setClientData({});
        console.log(error);
        alert("Error Authentication, Please Login Again");
      })
      .finally(function () {});
  }, []);

  return (
    <>
      <Head>
        <title>AnimixPlay</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar style={{}} />
      <main className={styles.main}>
        <div className={styles.Banner}>
          <img src="/banner.jpg" alt="" />
          <div>
            <div>
              <div className={styles.SpotLight}>#1 Spotlight</div>
              <h1 className={styles.BannerTitle}>
                <Link href={"/drstone"}>Dr. Stone: New World</Link>
              </h1>
              <div className={styles.BannerDescription}>
                With the Stone Wars over, the former members of Tsukasa's Empire
                of Might join forces with the Kingdom of Science to build a ship
                capable of sailing across open ocean to seek answers on the
                mystery of the global petrification. However, before they can
                begin their voyage Senku and his friends need to find some key
                resources and push some new scientific advancements to build the
                type of vessel they need.
              </div>
              <div className={styles.BannerButtons}>
                <Link
                  href={"/drstone/ep-1"}
                  className={styles.BannerButtonWatchNow}
                >
                  &#9654; Watch Now
                </Link>
                <Link href={"/drstone"} className={styles.BannerButtonDetails}>
                  Details
                </Link>
              </div>
            </div>
          </div>
          <span>&nbsp;</span>
        </div>
        <div className={styles.BetweenBannerAndTrending}></div>

        <h2 className={styles.Title} style={{ backgroundColor: "#212226" }}>
          Trending
        </h2>
        <div className={styles.TrendingCollection}>
          <br />

          {SuggestionsCollection.length === 0 && <>No Result Found</>}
          {SuggestionsCollection.map((item, index) => {
            return (
              <Link
                href={`/${item.showId}`}
                key={index}
                className={styles.Trending}
              >
                <div className={styles.TrendingDetails}>
                  <div className={styles.TrendingTitle}>{item.title}</div>
                  <div className={styles.TrendingRank}>
                    {index + 1 < 10 ? "0" + (index + 1) : index + 1}
                  </div>
                </div>
                <img src={item.poster} alt="" />
              </Link>
            );
          })}
          <br />
        </div>
        <br />
        <br />
        <h2 className={styles.Title}>Suggestions</h2>
        <div className={styles.Suggestions0}>
          <br />

          {/* {SuggestionsCollection.map((item, index) => {
                return (
                  <Link
                    href={`/${item.showId}`}
                    key={index}
                    className={styles.Show}
                  >
                    <div className={styles.ShowPoster}>
                      <img src={item.poster} alt="" />
                    </div>
                    <div className={styles.ShowDetails}>
                      <div className={styles.ShowTitle}>{item.title}</div>
                    </div>
                  </Link>
                );
              })} */}
          <ShowCollection
            ShowList={SuggestionsCollection}
            CrossButtonStatus={false}
            CrossButtonFunction={() => {}}
            maxWidth={"92vw"}
          />

          {/* <ShowCollection ShowList={WatchList} CrossButtonStatus={false} /> */}
          <br />
        </div>

        <h2 className={styles.Title}>Watch List</h2>
        <div className={styles.WatchList0}>
          <br />

          {/* {SuggestionsCollection.map((item, index) => {
                return (
                  <Link
                    href={`/${item.showId}`}
                    key={index}
                    className={styles.Show}
                  >
                    <div className={styles.ShowPoster}>
                      <img src={item.poster} alt="" />
                    </div>
                    <div className={styles.ShowDetails}>
                      <div className={styles.ShowTitle}>{item.title}</div>
                    </div>
                  </Link>
                );
              })} */}
          <ShowCollection
            ShowList={WatchList}
            CrossButtonStatus={false}
            CrossButtonFunction={() => {}}
            maxWidth={"92vw"}
          />

          <br />
        </div>

        <h2 className={styles.Title}>Recently Visited</h2>
        <div className={styles.RecentlyVisited0}>
          <br />

          {/* {SuggestionsCollection.map((item, index) => {
                return (
                  <Link
                    href={`/${item.showId}`}
                    key={index}
                    className={styles.Show}
                  >
                    <div className={styles.ShowPoster}>
                      <img src={item.poster} alt="" />
                    </div>
                    <div className={styles.ShowDetails}>
                      <div className={styles.ShowTitle}>{item.title}</div>
                    </div>
                  </Link>
                );
              })} */}
          <ShowCollection
            ShowList={RecentlyVisited}
            CrossButtonStatus={false}
            CrossButtonFunction={() => {}}
            maxWidth={"92vw"}
          />

          <br />
        </div>

        <br />
        <br />
        <br />
      </main>
      <Footer />
    </>
  );
}
